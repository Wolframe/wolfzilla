; Objects
; --

; list of all objects forming the tree on the left

FORM listObjects
{
	objects
	{
	}
}

; output can not be validated

STRUCT Item
{
	id		?@int
	type		?string
	text		?string
	details		?string
	icon		?string
	item		^Item[]
}

FORM ObjectTree
{
	tree
	{
		item 	Item[]
	}
}

; get object X, the actual object is fetched in the
; specific form. This getObject call we currently need
; to switch the tab widget to the proper page.

FORM seeObject
{
	object
	{
		id 	@int
		type 	@string
	}
}

FORM Object
{
	object
	{
		id 	int
		page 	string
	}	
}

; Users
; --

FORM listUsers
{
	users
	{
		getNullElem	?@bool
	}
}

FORM UserList
{
	users
	{
		user []
		{
			id 		@int
			login 		string
			firstName	string
			lastName	string
		}
	}
}

FORM readUser
{
	user
	{
		id		@int
	}
}
	
FORM User
{
	user
	{
		id 		@int
		id2		?@int		;HACK for duplicate assignments
		login 		string
		firstName	string
		lastName	string
		email		string
	}
}

STRUCT UserReference
{
	id	?@int
	login	?string
}

FORM updateUser
{
	_	User
}

FORM deleteUser
{
	user
	{
		id		@int
	}
}

STRUCT ProjectReference
{
	id		?@int
	name		?string
	shortcut	?string
}

STRUCT ComponentContent
{
	id 		?@int
	name 		?string
	description	?string
	project		?ProjectReference
	lead		?UserReference
	defaultAssignee	?UserReference
}

STRUCT ComponentReference
{
	id	@int
	name	?string
}

; Project
; --

FORM listProjects
{
	projects
	{
		getNullElem	?@bool
	}
}

FORM ProjectList
{
	projects
	{
		project []
		{
			id 		@int
			name 		string
			description	string
			shortcut	string
			owner		?UserReference
		}
	}
}

FORM readProject
{
	project
	{
		id		@int
	}
}
	
FORM Project
{
	project
	{
		id 		@int
		id2		?@int		;HACK for duplicate assignments
		id3		?@int		;another hack for the same
		name 		string
		description	string
		shortcut	string
		owner		?UserReference
		component ?[]
		{
			_	ComponentContent
		}
	}
}

FORM updateProject
{
	_	Project
}

FORM deleteProject
{
	project
	{
		id		@int
	}
}

; Component
; --

FORM Component
{
	component
	{
		_	ComponentContent
	}
}

FORM listComponents
{
	components
	{
		getNullElem	?@bool
		project
		{
			id	@int
		}
	}
}

FORM ComponentList
{
	components
	{
		component []
		{
			_ ComponentContent
		}
	}
}

FORM readComponent
{
	component
	{
		id		@int
	}
}

FORM updateComponent
{
	_	Component
}

FORM deleteComponent
{
	component
	{
		id		@int
	}
}

; Issue
; --

STRUCT Meta
{
	id	@int
	name	?string
	icon	?string
}

STRUCT Type
{
	_	Meta
}

STRUCT State
{
	_	Meta
}

STRUCT Resolution
{
	_	Meta
}

STRUCT Severity
{
	_	Meta
}

STRUCT Priority
{
	_	Meta
}

; TODO: plenty of hacks here because mapping into an array of structs is
; currently not possible
STRUCT IssueContent
{
	id		?@int
	reference	?string
	title		?string
	projectID	?int
	project		?ProjectReference
	componentID	?int
	component	?ComponentReference
	description	?string
	typeID		?int
	typeName	?string
	typeIcon	?string
	type		?Type
	stateID		?int
	stateName	?string
	state		?State
	resolutionID	?int
	resolutionName	?string
	resolution	?Resolution
	severityID	?int
	severityName	?string
	severityIcon	?string
	severity	?Severity
	priorityID	?int
	priorityName	?string
	priority	?Priority
	reporterID	?int
	reporterName	?string
	reporter	?UserReference
	owner		?UserReference
	assigneeID	?int
	assignee	?UserReference
	creationDate	?string
	lastModDate	?string
	resolvedDate	?string
	dueDate		?string
}

FORM Issue
{
	issue
	{
		_	IssueContent
	}
}

FORM listIssues
{
	issues
	{
		project		?ProjectReference
		status		?State
		component	?ComponentReference
		reporter	?UserReference
	}
}

FORM IssueList
{
	issues
	{
		issue []
		{
			_	IssueContent
		}
	}
}

FORM readIssue
{
	issue
	{
		id 		?@int
		reference	?@string
		project		?ProjectReference
	}
}

FORM updateIssue
{
	_	Issue
}

FORM deleteIssue
{
	issue
	{
		id		@int
	}
}

; -- IssuePriority

FORM listIssuePriorities
{
	priorities
	{
		getNullElem	?@bool
	}
}

FORM IssuePriorityList
{
	priorities
	{
		priority []
		{
			id 		@int
			name 		string
			icon		?string
		}
	}
}

; -- IssueSeverity

FORM listIssueSeverities
{
	severities
	{
		getNullElem	?@bool
	}
}

FORM IssueSeverityList
{
	severities
	{
		severity []
		{
			id		@int
			name		string
			icon		?string
		}
	}
}

; -- IssueStatus

FORM listIssueStati
{
	stati
	{
		getNullElem	?@bool
	}
}

FORM IssueStatusList
{
	stati
	{
		status []
		{
			id		@int
			name		string
			icon		?string
		}
	}
}

; -- IssueResolution

FORM listIssueResolutions
{
	resolutions
	{
		getNullElem	?@bool
	}
}

FORM IssueResolutionList
{
	resolutions
	{
		resolution []
		{
			id		@int
			name		string
			icon		?string
		}
	}
}

; -- IssueType

FORM listIssueTypes
{
	types
	{
		getNullElem	?@bool
	}
}

FORM IssueTypeList
{
	types
	{
		type []
		{
			id		@int
			name		string
			icon		?string
		}
	}
}
